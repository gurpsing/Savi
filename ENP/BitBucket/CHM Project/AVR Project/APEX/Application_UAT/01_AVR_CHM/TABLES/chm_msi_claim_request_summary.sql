
  CREATE TABLE "CHM_MSI_CLAIM_REQUEST_SUMMARY" 
   (	"REQ_SUMMARY_ID" NUMBER, 
	"MSI_CLAIM_REQ_ID" NUMBER, 
	"DIST_ID" NUMBER, 
	"INSTALLER_ID" NUMBER, 
	"CLAIM_TYPE" VARCHAR2(4000), 
	"CLAIM_DATE" TIMESTAMP (6) WITH TIME ZONE, 
	"SPA_NUMBER" VARCHAR2(4000), 
	"CURRENCY" VARCHAR2(4000), 
	"TOTAL_BATCH_LINES" NUMBER, 
	"TOTAL_LINES_SUBMITTED" NUMBER, 
	"TOTAL_LINES_NOT_SUBMITTED" NUMBER, 
	"TOTAL_LINES_OVERRIDDEN" NUMBER, 
	"TOTAL_LINES_NOT_OVERRIDDEN" NUMBER, 
	"LINES_OVERRIDDEN_CLAIM_AMOUNT" NUMBER, 
	"LINES_NOT_OVERRIDDEN_CLAIM_AMOUNT" NUMBER, 
	"UNIT_INCENTIVE_AMOUNT" NUMBER, 
	"SYSTEM_ATTACHMENT_AMOUNT" NUMBER, 
	"SYSTEM_SIZE_AMOUNT" NUMBER, 
	"TOTAL_CLAIM_AMOUNT" NUMBER, 
	"ATTRIBUTE_CONTEXT" VARCHAR2(4000), 
	"ATTRIBUTE1" VARCHAR2(4000), 
	"ATTRIBUTE2" VARCHAR2(4000), 
	"ATTRIBUTE3" VARCHAR2(4000), 
	"ATTRIBUTE4" VARCHAR2(4000), 
	"ATTRIBUTE5" VARCHAR2(4000), 
	"ATTRIBUTE6" VARCHAR2(4000), 
	"ATTRIBUTE7" VARCHAR2(4000), 
	"ATTRIBUTE8" VARCHAR2(4000), 
	"ATTRIBUTE9" VARCHAR2(4000), 
	"ATTRIBUTE10" VARCHAR2(4000), 
	"ATTRIBUTE11" VARCHAR2(4000), 
	"ATTRIBUTE12" VARCHAR2(4000), 
	"ATTRIBUTE13" VARCHAR2(4000), 
	"ATTRIBUTE14" VARCHAR2(4000), 
	"ATTRIBUTE15" VARCHAR2(4000), 
	"CREATED_BY" VARCHAR2(250), 
	"CREATION_DATE" TIMESTAMP (6) WITH TIME ZONE, 
	"LAST_UPDATED_BY" VARCHAR2(250), 
	"LAST_UPDATED_DATE" TIMESTAMP (6) WITH TIME ZONE, 
	"SOURCE_APP_ID" NUMBER, 
	"ENTERPRISE_ID" NUMBER, 
	"IP_ADDRESS" VARCHAR2(4000), 
	"USER_AGENT" VARCHAR2(4000), 
	 CONSTRAINT "CHM_MSI_CLAIM_REQUEST_SUMMARY_PK" PRIMARY KEY ("REQ_SUMMARY_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE INDEX "CHM_MSI_CLAIM_REQUEST_SUMMARY_CLAIM_REQ_ID_IDX" ON "CHM_MSI_CLAIM_REQUEST_SUMMARY" ("MSI_CLAIM_REQ_ID") 
  ;

  CREATE OR REPLACE EDITIONABLE TRIGGER "BIU_CHM_MSI_CLAIM_REQUEST_SUMMARY" BEFORE
    INSERT OR UPDATE ON CHM_MSI_CLAIM_REQUEST_SUMMARY
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        IF :NEW.REQ_SUMMARY_ID IS NULL THEN
            :NEW.REQ_SUMMARY_ID := CHM_MSI_CLAIM_REQUEST_SUMMARY_SEQ.NEXTVAL;
        END IF;
       :NEW.CREATED_BY         := NVL(:NEW.CREATED_BY , CHM_UTIL_PKG.GETUSERNAME());
        :NEW.CREATION_DATE      := NVL(:NEW.CREATION_DATE ,SYSTIMESTAMP);
        :NEW.LAST_UPDATED_BY    := NVL(:NEW.LAST_UPDATED_BY, CHM_UTIL_PKG.GETUSERNAME());
        :NEW.LAST_UPDATED_DATE  := NVL(:NEW.LAST_UPDATED_DATE ,SYSTIMESTAMP) ;
        :NEW.SOURCE_APP_ID      := NVL(:NEW.SOURCE_APP_ID, CHM_UTIL_PKG.GETSOURCEAPP('CHM'));
        :NEW.ENTERPRISE_ID      := NVL(:NEW.ENTERPRISE_ID, CHM_CONST_PKG.GETENTERPRISEID());
        :NEW.IP_ADDRESS         := NVL(:NEW.IP_ADDRESS,CHM_UTIL_PKG.GETIPADDRESS());
        :NEW.USER_AGENT         := NVL(:NEW.USER_AGENT,CHM_UTIL_PKG.GETUSERAGENT());

      ELSIF UPDATING THEN
       :NEW.LAST_UPDATED_BY :=
            CASE
                WHEN :OLD.LAST_UPDATED_BY != :NEW.LAST_UPDATED_BY THEN
                    :NEW.LAST_UPDATED_BY
                ELSE CHM_UTIL_PKG.GETUSERNAME()
            END;

        :NEW.LAST_UPDATED_DATE :=
            CASE
                WHEN :OLD.LAST_UPDATED_DATE != :NEW.LAST_UPDATED_DATE THEN
                    :NEW.LAST_UPDATED_DATE
                ELSE SYSTIMESTAMP
            END;

        :NEW.IP_ADDRESS :=
            CASE
                WHEN :OLD.IP_ADDRESS != :NEW.IP_ADDRESS THEN
                    :NEW.IP_ADDRESS
                ELSE CHM_UTIL_PKG.GETIPADDRESS()
            END;

        :NEW.USER_AGENT :=
            CASE
                WHEN :OLD.USER_AGENT != :NEW.USER_AGENT THEN
                    :NEW.USER_AGENT
                ELSE CHM_UTIL_PKG.GETUSERAGENT()
            END;

      END IF;
   END;


/
ALTER TRIGGER "BIU_CHM_MSI_CLAIM_REQUEST_SUMMARY" ENABLE;